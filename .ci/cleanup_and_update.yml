# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:

- bash: |
    echo "##vso[task.prependpath]$CONDA/bin"
  displayName: Add conda to PATH

- bash: |
    sudo chown -R $USER /usr/share/miniconda
  displayName: Take ownership of conda installation

- bash: |
    conda env create --quiet --file environment.yml
  displayName: Create Anaconda environment

- bash: |
    source activate cait
    pytest --junitxml=junit/unit-test.xml
  displayName: pytest

- bash: |
    source activate cait
    ls -la
    python convert.py --update-readme
    python convert.py --to-csv --output actions.csv
    git config --local user.name "Azure Pipelines"
    git config --local user.email "organizejs@gmail.com"
    git add README.md
    git add actions.csv
    git commit -m "Auto Update README & actions.csv  ***NO_CI***"
  displayName: 'Update, build and commit'

- task: DownloadSecureFile@1
  inputs:
    secureFile: deploy_key
  displayName: 'Get the deploy key'

- bash: |
    mkdir ~/.ssh && mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
    chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
    ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    git remote set-url --push origin git@github.com:organizejs/collective-actions-in-tech.git
    git push origin HEAD:master
  displayName: 'Push to GitHub'
  condition: | 
    and(not(eq(variables['Build.Reason'], 'PullRequest')),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'junit/*.xml'
  condition: succeededOrFailed()
